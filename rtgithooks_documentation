Git Hook Update

Директория: .git/hooks/
Название скрипта: update
Название дополнительной библиотеки: rtgitlib.py (вместе с update должна располагаться в директории .git/hooks/)
Язык: Python 2.7

Функциональные особенности:

1. Удаление бранчей запрещено.


2. Удаление тэгов запрещено.


3. Non-fastforward updates запрещены.


4. Проверка commit message на соответствие заданному формату.

	Проверка работает только в случае, когда поле rtsoft.commit-message-check в .git/config равно 1.
		git config rtsoft.commit-message-check 1

	Проверяется наличие полей “REF:” и “Signed-off-by:“.
	Поле “REF:” должно представлять собой #<номер бага размером от 1 до 6 цифр> 
		Пример: 
			REF: #260
	Поле “Signed-off-by:” должно представлять собой имя, фамилию и почтовый адрес программиста между знаками < и >.
		Пример:
			Signed-off-by: Pavel Gromov <pgromov@dev.rtsoft.ru>


5. Контроль доступа к “главным веткам проекта”.
	
	Права на git push в главную ветку(и) проекта должны быть только у гейткипера(ов). В одном репозитории главных веток может быть несколько.
	Список гейткиперов должен быть прописан в .git/config в поле rtsoft.gatekeepers.
	Пример создания списка через командную строку:
		git config rtsoft.gatekeepers “pgromov”

	Для добавления нового гейткипера, требуется запомнить действующих гейкиперов. Их список можно получить командой git config rtsoft.gatekeepers. Затем следует удалить поле  rtsoft.gatekeepers командой  git config --unset rtsoft.gatekeepers и добавить это же поле, но с новыми имена гейткиперов:
		git config rtsoft.gatekeepers “pgromov dkrivoschekov”

	Если забыть сделать --unset, то создадутся два поля rtsoft.gatekeepers с разными значениями. В этом случае скрипт будет работать некорректно. Файл .git/config придется править вручную.

	В файле .git/config это будет выглядеть следующим образом:
		[rtsoft] 
			gatekeepers = pgromov dkrivoschekov

	Если в конфиге нет поля rtsoft.gatekeepers, то гейткиперы не учитываются. В главные ветки может пушить кто угодно.


6. Задание имен главных веток проекта.

	Это требуется для того, чтобы в ветки с конкретными именами могли пушить только гейткиперы. 
	Названия главных веток проекта записывается в конфиге .git/config в поле rtsoft.master-branches. Задание названий аналогично заданию списка гейткиперов, см пункт 5.
	Если названия главных веток не заданы, то проверка не производится.


7. Новые ветки могут создаваться только в строго определенной зоне имен.

	За эту функцию отвечает поле конфига rtsoft.branch_name_check. Если оно равно 1, то проверка будет производится. В противном случае – нет.
		git config rtsoft.branch_name_check 1
	
	У простых пользователей (не гейткиперов) нет возможности создавать ветки с произвольным именем. При создании ветки, ее имя проверяется на соответствие формату: bugfixes/<bugno>_<string>, где <bugno> - номер бага от 1 до 6 цифр (0 - 999999), <string> - произвольная строка.

	Полное имя новой ветки не должно быть больше 72 символов (справедливо и для гейткиперов).
	Имя новой ветки не может начинаться с “origin/” (справедливо и для гейткиперов).

	Последние два условия работают даже, если rtsoft.branch_name_check не равен 1 или вообще неопределен.


8. Уведомление при добавлении новых коммитов в ветку.

	При успешном пуше отправляется письмо с информацией о коммите. Для отправки писем должен быть в конфиге прописан список получателей в поле recipients. Отличительной особенностью этого поля является то, что оно должно быть прописано отдельно для каждой ветки проекта.
	Пример добавления получателей уведомлений для ветки master:
		git config branch.master.recipients "pgromov dkrivoschekov"
	Для остальных веток добавление производится аналогично.
	Пример того, как это выглядит в конфиге .git/config:
		[branch "master"]
				remote = origin
				merge = refs/heads/master
				recipients = pgromov dkrivoschekov
	Изменение списка получателей производится аналогично изменению списка гейткиперов, см. Пункт 5.

	Если для ветки не прописан список получателей, то при добавлении коммитов в эту ветку, уведомления рассылаться не будут.
	
	Для рассылки уведомлений на сервере должна быть утилита sendmail.
	Все уведомления будут приходить с адреса git@dev.rtsoft.ru.

	Пример уведомления:

		[Bug #260] Title message

		Refname: refs/heads/master
		Reftype: branch
		Old_Rev: 242554c5ea9d901a7842cea0d476a5e38be92cf2
		New_Rev: 7a63aa35a26d4bd4ede479bed5f49ebf380c995d
		Receiving commit from pgromov (Pavel Gromov)

		Commit title: Title message
		Commit message: 
		REF: #12345

		Description.

		Signed-off-by: Pavel Gromov <pgromov@dev.rtsoft.ru>


9. Примечание:

	Скрипт может выводить некоторую отладочную информацию при работе. Для включения вывода требуется в конфиге сделать значение rtsoft.debug равным 1:
		git config rtsoft.debug 1
