#!/usr/bin/python

import os
import sys


refname = sys.argv[1]
oldrev = sys.argv[2]
newrev = sys.argv[3]
zero = '0' * 40

DEBUG_LEVEL = None
GATEKEEPERS_GROUP = None

errors = []


def check_errors():
    '''
    Print error messages and exit with an error code
    '''

    for error in errors:
        sys.stderr.write('%s\n' % str(error))

    sys.exit(1)


def add_error(msg):
    """
    Add error message to errors list
    """

    errors.append(msg)


def check_deletion():
    """
    Denies deletion of a branch
    """

    if newrev == zero:
        add_error("[POLICY] Refusing to delete this branch")


def check_fast_forward():
    """
    Enforces fast-forward only pushes
    """

    if oldrev != zero:  # ignore new branches
        missed_refs = os.popen("git rev-list %s..%s" % (newrev, oldrev)).read()
        missed_ref_count = len(missed_refs.split("\n"))
        if missed_ref_count > 0:
            add_error(
                "[POLICY] Non fast-forward updates are not allowed for this branch")


def main():
    sys.stdout.write("Enforcing Policies... \n(%s) (%s) (%s)\n" %
                    (refname, oldrev[0:6], newrev[0:6]))

    check_deletion()
    check_fast_forward()

    check_errors()

main()
